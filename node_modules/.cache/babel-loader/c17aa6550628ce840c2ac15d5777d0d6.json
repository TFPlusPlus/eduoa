{"ast":null,"code":"var _jsxFileName = \"/home/cli776/eduoa/src/components/QuestionDatabaseComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport LearningTree from './LearningTree';\nimport QuestionDatabaseItem from './QuestionDatabaseItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuestionDatabaseComponent({\n  modules,\n  questionSets\n}) {\n  _s();\n\n  function toggleTreeView() {\n    setTreeView(!treeView);\n  }\n\n  const [treeView, setTreeView] = useState(true);\n\n  if (questionSets.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"card\",\n      children: \"No question sets to show.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swap-views\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-switch\",\n        onClick: toggleTreeView,\n        children: treeView ? \"Switch to Grid View\" : \"Switch to Tree View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), treeView && /*#__PURE__*/_jsxDEV(LearningTree, {\n      modules: modules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }, this), !treeView && questionSets.map((questionSet, index) => /*#__PURE__*/_jsxDEV(QuestionDatabaseItem, {\n      questionSet: questionSet\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n\n_s(QuestionDatabaseComponent, \"a6Udgfha4CTcj+K9YIwca8/Pt7k=\");\n\n_c = QuestionDatabaseComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDatabaseComponent\");","map":{"version":3,"sources":["/home/cli776/eduoa/src/components/QuestionDatabaseComponent.js"],"names":["React","useState","LearningTree","QuestionDatabaseItem","QuestionDatabaseComponent","modules","questionSets","toggleTreeView","setTreeView","treeView","length","map","questionSet","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;;AAEA,eAAe,SAASC,yBAAT,CAAoC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAApC,EAA8D;AAAA;;AAEzE,WAASC,cAAT,GAA0B;AACtBC,IAAAA,WAAW,CAAC,CAACC,QAAF,CAAX;AACH;;AAED,QAAM,CAACA,QAAD,EAAWD,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;;AAEA,MAAIK,YAAY,CAACI,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,wBAAO;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,EAAEH,cAA3C;AAAA,kBAA4DE,QAAQ,GAAG,qBAAH,GAA2B;AAA/F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKA,QAAQ,iBAAI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YAJjB,EAKK,CAACI,QAAD,IAAaH,YAAY,CAACK,GAAb,CAAiB,CAACC,WAAD,EAAcC,KAAd,kBAC3B,QAAC,oBAAD;AAEI,MAAA,WAAW,EAAID;AAFnB,OACWC,KADX;AAAA;AAAA;AAAA;AAAA,YADU,CALlB;AAAA,kBADJ;AAcH;;GA1BuBT,yB;;KAAAA,yB","sourcesContent":["import React, { useState } from 'react'\r\nimport LearningTree from './LearningTree'\r\nimport QuestionDatabaseItem from './QuestionDatabaseItem'\r\n\r\nexport default function QuestionDatabaseComponent( {modules, questionSets} ) {\r\n\r\n    function toggleTreeView() {\r\n        setTreeView(!treeView)\r\n    }\r\n\r\n    const [treeView, setTreeView] = useState(true)\r\n\r\n    if (questionSets.length === 0) {\r\n        return <h1 className=\"card\">No question sets to show.</h1>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"swap-views\">\r\n                <button className=\"button-switch\" onClick={toggleTreeView}>{treeView ? \"Switch to Grid View\" : \"Switch to Tree View\"}</button>\r\n            </div>\r\n            {treeView && <LearningTree modules={modules} />}\r\n            {!treeView && questionSets.map((questionSet, index) => (\r\n                <QuestionDatabaseItem\r\n                    key = {index}\r\n                    questionSet = {questionSet}\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}