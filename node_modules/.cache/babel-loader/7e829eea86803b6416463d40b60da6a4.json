{"ast":null,"code":"var _jsxFileName = \"/home/cli776/eduoa/src/components/Grades.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport root from '../root';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Grades({\n  studentEmail,\n  admin\n}) {\n  _s();\n\n  const [grades, setGrades] = useState(undefined);\n  const [ready, setReady] = useState(false);\n  const history = useHistory();\n  let link;\n\n  if (admin) {\n    link = \"qset\";\n  } else {\n    link = \"quiz\";\n  }\n\n  function getPercentage(s) {\n    let parts = s.split(\"/\");\n    return (parseFloat(parts[0]) / parseFloat(parts[1]) * 100).toFixed(2);\n  }\n\n  function getGrades() {\n    fetch(`${root}/GetMarkByStudentEmail/${studentEmail}`).then(res => res.json()).then(data => {\n      setGrades(data);\n    });\n  }\n\n  function linkToPage(id) {\n    history.push(`/${link}/${id}`);\n  }\n\n  useEffect(() => {\n    getGrades();\n  }, []);\n  useEffect(() => {\n    if (grades !== undefined) {\n      setReady(true);\n    }\n  }, [grades]);\n\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-label\",\n        children: \"Gradebook:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"kpTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quiz No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: grades.map((grade, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => linkToPage(grade.quiz_id),\n                  children: grade.quiz_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: grade.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [getPercentage(grade.result), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}\n\n_s(Grades, \"l56fKkckyW+TQVQKckxWxcMxlac=\", false, function () {\n  return [useHistory];\n});\n\n_c = Grades;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grades\");","map":{"version":3,"sources":["/home/cli776/eduoa/src/components/Grades.js"],"names":["React","useEffect","useState","useHistory","root","Grades","studentEmail","admin","grades","setGrades","undefined","ready","setReady","history","link","getPercentage","s","parts","split","parseFloat","toFixed","getGrades","fetch","then","res","json","data","linkToPage","id","push","map","grade","index","quiz_id","result"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport root from '../root'\r\n\r\nexport default function Grades( {studentEmail, admin} ) {\r\n\r\n    const [grades, setGrades] = useState(undefined)\r\n    const [ready, setReady] = useState(false)\r\n    const history = useHistory()\r\n\r\n    let link\r\n    if (admin) {\r\n        link = \"qset\"\r\n    } else {\r\n        link = \"quiz\"\r\n    }\r\n\r\n    function getPercentage(s) {\r\n        let parts = s.split(\"/\")\r\n        return (parseFloat(parts[0]) / parseFloat(parts[1]) * 100).toFixed(2)\r\n    }\r\n\r\n    function getGrades() {\r\n        fetch(`${root}/GetMarkByStudentEmail/${studentEmail}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setGrades(data)\r\n        })\r\n    }\r\n\r\n    function linkToPage(id) {\r\n        history.push(`/${link}/${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGrades()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (grades !== undefined) {\r\n            setReady(true)\r\n        }\r\n    }, [grades])\r\n\r\n    if (ready) {\r\n        return (\r\n            <div className=\"info-bottom\">\r\n                <p className='text-label'>Gradebook:</p>\r\n                <table className=\"kpTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Quiz No.</th>\r\n                            <th>Grade</th>\r\n                            <th>Percentage</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {grades.map((grade, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td><button onClick={() => linkToPage(grade.quiz_id)}>{grade.quiz_id}</button></td>\r\n                                    <td>{grade.result}</td>\r\n                                    <td>{getPercentage(grade.result)}%</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}