{"ast":null,"code":"import axios from 'axios';\nconst service = axios.create({\n  baseURL: 'https://eduoa.azurewebsites.net/api/',\n  timeout: 500000\n});\nservice.interceptors.request.use(config => {\n  if (window.localStorage.getItem('jwt')) {\n    config.headers.Authorization = `Bearer ${window.localStorage.getItem('jwt')}`;\n  }\n\n  return config;\n}, err => {\n  return Promise.reject(err);\n});\nservice.interceptors.response.use(response => {\n  return response;\n} // error => {\n//     if(error.response){\n//         switch(error.response.status){\n//             case 401:\n//                 useHistory().push('/login')\n//         }\n//     }\n//     return Promise.reject(error.response.data)\n// }\n);\nexport default service;","map":{"version":3,"sources":["/home/cli776/eduoa/src/axios/index.js"],"names":["axios","service","create","baseURL","timeout","interceptors","request","use","config","window","localStorage","getItem","headers","Authorization","err","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,sCADkB;AAE3BC,EAAAA,OAAO,EAAE;AAFkB,CAAb,CAAhB;AAKAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACEC,MAAM,IAAI;AACR,MAAIC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,CAAJ,EAAwC;AACtCH,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CACvC,KADuC,CAEvC,EAFF;AAGD;;AACD,SAAOH,MAAP;AACD,CARH,EASEM,GAAG,IAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAXH;AAcAb,OAAO,CAACI,YAAR,CAAqBY,QAArB,CAA8BV,GAA9B,CACEU,QAAQ,IAAI;AACV,SAAOA,QAAP;AACD,CAHH,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZF;AAeA,eAAehB,OAAf","sourcesContent":["import axios from 'axios'\r\n\r\nconst service = axios.create({\r\n  baseURL: 'https://eduoa.azurewebsites.net/api/',\r\n  timeout: 500000\r\n})\r\n\r\nservice.interceptors.request.use(\r\n  config => {\r\n    if (window.localStorage.getItem('jwt')) {\r\n      config.headers.Authorization = `Bearer ${window.localStorage.getItem(\r\n        'jwt'\r\n      )}`\r\n    }\r\n    return config\r\n  },\r\n  err => {\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nservice.interceptors.response.use(\r\n  response => {\r\n    return response\r\n  }\r\n  // error => {\r\n  //     if(error.response){\r\n  //         switch(error.response.status){\r\n  //             case 401:\r\n  //                 useHistory().push('/login')\r\n  //         }\r\n  //     }\r\n  //     return Promise.reject(error.response.data)\r\n  // }\r\n)\r\n\r\nexport default service\r\n"]},"metadata":{},"sourceType":"module"}