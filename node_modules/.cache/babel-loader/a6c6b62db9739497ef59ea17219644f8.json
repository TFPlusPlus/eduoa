{"ast":null,"code":"var _jsxFileName = \"/home/cli776/eduoa/src/views/app/index.js\",\n    _s6 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, useParams, Switch } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport Header from '../../components/Header';\nimport Panel from '../../components/Panel';\nimport Profile from '../../components/Profile';\nimport UserDatabaseComponent from '../../components/UserDatabaseComponent';\nimport QuestionDatabaseComponent from '../../components/QuestionDatabaseComponent';\nimport Footer from '../../components/Footer';\nimport QuestionSetComponent from '../../components/QuestionSetComponent';\nimport Quiz from '../../components/Quiz';\nimport LearningTree from '../../components/LearningTree';\nimport KnowledgePoint from '../../components/KnowledgePoint';\nimport './index.css';\nimport Comments from '../../components/Comments';\nimport root from '../../root';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass User {\n  constructor(id, name, email = '', phone = '', bio = '', admin = false) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.phone = phone;\n    this.bio = bio;\n    this.admin = admin;\n  }\n\n}\n\nclass Question {\n  constructor(id, question, answer) {\n    this.id = id;\n    this.question = question;\n    this.answer = answer;\n  }\n\n}\n\nclass QuestionSet {\n  constructor(id, name, length, difficulty, questions = []) {\n    this.id = id;\n    this.name = name;\n    this.length = length;\n    this.difficulty = difficulty;\n    this.questions = questions;\n  }\n\n  add(question) {\n    if (question instanceof Question) {\n      this.questions.push(question);\n    }\n  }\n\n  remove(id) {\n    this.questions = this.questions.filter(e => e.id !== id);\n  }\n\n}\n\nclass Module {\n  constructor(id, name, questionSetList = [], nextModules = []) {\n    this.id = id;\n    this.name = name;\n\n    if (questionSetList instanceof Array) {\n      this.questionSetList = [...questionSetList].filter(e => e instanceof QuestionSet);\n    }\n\n    this.nextModules = nextModules;\n  }\n\n  add(questionSet) {\n    if (questionSet instanceof QuestionSet) {\n      this.questionSetList.push(questionSet);\n    }\n  }\n\n  remove(id) {\n    this.questionSetList = this.questionSetList.filter(e => e.id !== id);\n  }\n\n  setNext(module) {\n    if (module instanceof Module) {\n      this.nextModules.push(module);\n    }\n  }\n\n}\n\nlet usersReady = false,\n    questionSetsReady = false,\n    commentsReady = false,\n    renderReady = false;\n\nfunction App() {\n  _s6();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$(),\n      _s3 = $RefreshSig$(),\n      _s4 = $RefreshSig$(),\n      _s5 = $RefreshSig$();\n\n  function getProfile() {\n    let user;\n    fetch(root + \"/GetProfile\", {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      if (data.hasOwnProperty(\"teacher_id\")) {\n        user = new User(data.teacher_id, `${data.firstName} ${data.lastName}`, data.email, data.phone, data.bio, true);\n      } else {\n        user = new User(data.student_id, `${data.firstName} ${data.lastName}`, data.email, data.phone, data.bio, false);\n      }\n\n      setMainUser(user);\n    }).catch(err => {\n      alert(\"Please sign in first.\");\n      history.push('/signin');\n    });\n  }\n\n  function getUsers() {\n    let users = [];\n\n    if (mainUser.admin) {\n      fetch(root + \"/GetRelationshipByTeacherEmail\", {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        for (let i in data) {\n          users.push(new User(0, data[i].student_email));\n        }\n\n        setUserDatabase(users);\n      });\n    } else {\n      fetch(root + \"/GetRelationshipByStudentEmail\", {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        for (let i in data) {\n          users.push(new User(0, data[i].teacher_email));\n        }\n\n        setUserDatabase(users);\n      });\n    }\n  }\n\n  function getQuestionSets() {\n    fetch(root + \"/GetAllQuizs\").then(res => {\n      return res.json();\n    }).then(data => {\n      let questionSets = [];\n\n      for (let i in data) {\n        let qs = data[i];\n        let qso = new QuestionSet(qs.id, `${qs.subject} (${qs.name})`, qs.length, qs.difficulty);\n        fetch(root + `/GetAllQuestionsByQuizID/${qs.id}`).then(res => res.json()).then(data => {\n          for (let k in data) {\n            let q = data[k];\n            qso.add(new Question(q.id, q.label, q.answer));\n          }\n\n          qso.length = qso.questions.length;\n        });\n        questionSets.push(qso);\n      }\n\n      setQuestionDatabase(questionSets);\n    });\n  }\n\n  function getModules() {\n    let modules = [];\n    let module;\n    fetch(root + \"/GetAllModules\").then(res => {\n      return res.json();\n    }).then(data => {\n      for (let i in data) {\n        let m = data[i];\n        module = new Module(m.id, `${m.subject}: ${m.difficulty}`, [], m.nextModules);\n\n        for (let j in m.quizs) {\n          let qs = m.quizs[j];\n          let qso = new QuestionSet(qs.id, `${qs.subject} (${qs.name})`, qs.length, qs.difficulty);\n          fetch(root + `/GetAllQuestionsByQuizID/${qs.id}`).then(res => res.json()).then(data => {\n            for (let k in data) {\n              let q = data[k];\n              qso.add(new Question(q.id, q.label, q.answer));\n            }\n\n            qso.length = qso.questions.length;\n          });\n          module.add(qso);\n        }\n\n        modules.push(module);\n      }\n\n      if (!mainUser.admin) {\n        fetch(root + `/GetProgressByStudentEmail/${mainUser.email}`).then(res => res.json()).then(data => {\n          let unlockedModules = [1];\n\n          for (let l in data) {\n            if (!(data[l].module_id in unlockedModules)) {\n              unlockedModules.push(data[l].module_id);\n            }\n          }\n\n          console.log(unlockedModules);\n          modules = modules.filter(m => unlockedModules.some(u => u === m.id));\n          linkModules(modules);\n          setModuleDatabase(modules);\n        });\n      } else {\n        linkModules(modules);\n        setModuleDatabase(modules);\n      }\n    });\n  }\n\n  function linkModules(modules) {\n    if (modules.length !== 0) {\n      let module = modules[0];\n      let nextModuleIds = [];\n      fetch(root + `/GetNextModuleByCurrentId/${module.id}`).then(res => res.json()).then(data => {\n        for (let i in data) {\n          let link = data[i];\n\n          if (!(link.nextModule_Id in nextModuleIds)) {\n            nextModuleIds.push(link.nextModule_Id);\n          }\n        }\n\n        return nextModuleIds;\n      }).then(nextModuleIds => {\n        for (let j in nextModuleIds) {\n          module.setNext(modules.find(m => m.id === nextModuleIds[j]));\n        }\n\n        linkModules(modules.slice(1));\n      });\n    } else {\n      setModulesReady(true);\n    }\n  }\n\n  function getComments() {\n    fetch(root + \"/GetAllComments\").then(res => res.json()).then(data => {\n      setComments(data);\n    });\n  }\n\n  const history = useHistory();\n  const token = window.localStorage.getItem('jwt');\n  const [mainUser, setMainUser] = useState(new User());\n  const [userDatabase, setUserDatabase] = useState(undefined);\n  const [questionDatabase, setQuestionDatabase] = useState(undefined);\n  const [moduleDatabase, setModuleDatabase] = useState([new Module()]);\n  const [modulesReady, setModulesReady] = useState(false);\n  const [page, setPage] = useState(1);\n  const [showComments, setShowComments] = useState([]);\n  const [comments, setComments] = useState(undefined);\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    getProfile();\n  }, []);\n  useEffect(() => {\n    if (mainUser.name !== undefined) {\n      getUsers();\n      getQuestionSets();\n      getModules();\n      getComments();\n    }\n  }, [mainUser]);\n  useEffect(() => {\n    if (userDatabase !== undefined) {\n      setShowComments(new Array(userDatabase.length).fill(false));\n    }\n  }, [userDatabase]);\n  useEffect(() => {\n    if (userDatabase !== undefined) {\n      usersReady = true;\n    }\n\n    if (questionDatabase !== undefined) {\n      questionSetsReady = true;\n    }\n\n    if (comments !== undefined) {\n      commentsReady = true;\n    }\n\n    if (!ready) {\n      renderReady = usersReady && questionSetsReady && modulesReady && commentsReady;\n      setReady(renderReady);\n    }\n  }, [userDatabase, questionDatabase, moduleDatabase, comments, modulesReady]);\n\n  function changePage(pageId) {\n    setPage(pageId);\n  }\n\n  function DynamicProfile() {\n    _s();\n\n    let {\n      name\n    } = useParams();\n    return /*#__PURE__*/_jsxDEV(Profile, {\n      pendingUser: name,\n      admin: mainUser.admin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }, this);\n  }\n\n  _s(DynamicProfile, \"/NYLfKm8HcAtwQX2OcaWj21t07w=\", false, function () {\n    return [useParams];\n  });\n\n  function DynamicQuestionDatabase() {\n    _s2();\n\n    let {\n      id\n    } = useParams();\n    return /*#__PURE__*/_jsxDEV(QuestionSetComponent, {\n      questionSet: questionDatabase.find(e => e.id === parseInt(id))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }, this);\n  }\n\n  _s2(DynamicQuestionDatabase, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n    return [useParams];\n  });\n\n  function DynamicModule() {\n    _s3();\n\n    let {\n      id\n    } = useParams();\n    return /*#__PURE__*/_jsxDEV(KnowledgePoint, {\n      module: moduleDatabase.find(m => m.id === parseInt(id)).questionSetList,\n      admin: mainUser.admin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 16\n    }, this);\n  }\n\n  _s3(DynamicModule, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n    return [useParams];\n  });\n\n  function DynamicQuiz() {\n    _s4();\n\n    let {\n      id\n    } = useParams();\n    return /*#__PURE__*/_jsxDEV(Quiz, {\n      questionSet: questionDatabase.find(qs => qs.id === parseInt(id)),\n      email: mainUser.email,\n      qsetId: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 16\n    }, this);\n  }\n\n  _s4(DynamicQuiz, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n    return [useParams];\n  });\n\n  function DynamicComments() {\n    _s5();\n\n    let {\n      name\n    } = useParams();\n    return /*#__PURE__*/_jsxDEV(Comments, {\n      name: name,\n      commentList: comments.filter(c => c.studuent_Receiver === name || c.teacher_Sender === name)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 16\n    }, this); // Intentional Misspelling\n  }\n\n  _s5(DynamicComments, \"/NYLfKm8HcAtwQX2OcaWj21t07w=\", false, function () {\n    return [useParams];\n  });\n\n  function toggleComment(id) {\n    setShowComments([...showComments.slice(0, id), !showComments[id], ...showComments.slice(id + 1)]);\n  }\n\n  function addComment(comment, user) {\n    fetch(root + \"/Communication\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        \"Teacher_Sender\": `${mainUser.email}`,\n        \"Student_Receiver\": `${user.name}`,\n        \"Text\": `${comment}`\n      })\n    }).then(alert(\"Comment sent!\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: ready && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/app\",\n        render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Panel, {\n            admin: mainUser.admin,\n            onClick: changePage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), page === 0 && /*#__PURE__*/_jsxDEV(Profile, {\n            pendingUser: mainUser,\n            admin: mainUser.admin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 42\n          }, this), page === 1 && mainUser.admin && /*#__PURE__*/_jsxDEV(UserDatabaseComponent, {\n            database: userDatabase,\n            toggleComment: toggleComment,\n            showComments: showComments,\n            addComment: addComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 60\n          }, this), page === 2 && mainUser.admin && /*#__PURE__*/_jsxDEV(QuestionDatabaseComponent, {\n            modules: moduleDatabase,\n            questionSets: questionDatabase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 60\n          }, this), page === 1 && !mainUser.admin && /*#__PURE__*/_jsxDEV(LearningTree, {\n            modules: moduleDatabase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 61\n          }, this), page === 2 && !mainUser.admin && /*#__PURE__*/_jsxDEV(UserDatabaseComponent, {\n            database: userDatabase,\n            toggleComment: toggleComment,\n            showComments: showComments,\n            addComment: addComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/:name\",\n          children: /*#__PURE__*/_jsxDEV(DynamicProfile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/qset/:id\",\n          children: /*#__PURE__*/_jsxDEV(DynamicQuestionDatabase, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/kp/:id\",\n          children: /*#__PURE__*/_jsxDEV(DynamicModule, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/quiz/:id\",\n          children: /*#__PURE__*/_jsxDEV(DynamicQuiz, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/comments/:name\",\n          children: /*#__PURE__*/_jsxDEV(DynamicComments, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 9\n  }, this);\n}\n\n_s6(App, \"SEi7mJdZ/7Wf/AFyyZjYV5+v+qo=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cli776/eduoa/src/views/app/index.js"],"names":["useEffect","useState","BrowserRouter","Router","Route","useParams","Switch","useHistory","Header","Panel","Profile","UserDatabaseComponent","QuestionDatabaseComponent","Footer","QuestionSetComponent","Quiz","LearningTree","KnowledgePoint","Comments","root","User","constructor","id","name","email","phone","bio","admin","Question","question","answer","QuestionSet","length","difficulty","questions","add","push","remove","filter","e","Module","questionSetList","nextModules","Array","questionSet","setNext","module","usersReady","questionSetsReady","commentsReady","renderReady","App","getProfile","user","fetch","headers","token","then","res","json","data","hasOwnProperty","teacher_id","firstName","lastName","student_id","setMainUser","catch","err","alert","history","getUsers","users","mainUser","i","student_email","setUserDatabase","teacher_email","getQuestionSets","questionSets","qs","qso","subject","k","q","label","setQuestionDatabase","getModules","modules","m","j","quizs","unlockedModules","l","module_id","console","log","some","u","linkModules","setModuleDatabase","nextModuleIds","link","nextModule_Id","find","slice","setModulesReady","getComments","setComments","window","localStorage","getItem","userDatabase","undefined","questionDatabase","moduleDatabase","modulesReady","page","setPage","showComments","setShowComments","comments","ready","setReady","fill","changePage","pageId","DynamicProfile","DynamicQuestionDatabase","parseInt","DynamicModule","DynamicQuiz","DynamicComments","c","studuent_Receiver","teacher_Sender","toggleComment","addComment","comment","method","body","JSON","stringify","props"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, useParams, Switch } from 'react-router-dom'\nimport { useHistory } from 'react-router'\nimport Header from '../../components/Header'\nimport Panel from '../../components/Panel'\nimport Profile from '../../components/Profile'\nimport UserDatabaseComponent from '../../components/UserDatabaseComponent'\nimport QuestionDatabaseComponent from '../../components/QuestionDatabaseComponent'\nimport Footer from '../../components/Footer'\nimport QuestionSetComponent from '../../components/QuestionSetComponent'\nimport Quiz from '../../components/Quiz'\nimport LearningTree from '../../components/LearningTree'\nimport KnowledgePoint from '../../components/KnowledgePoint'\nimport './index.css'\nimport Comments from '../../components/Comments'\nimport root from '../../root'\n\nclass User {\n    constructor(id, name, email='', phone='', bio='', admin=false) {\n        this.id = id\n        this.name = name\n        this.email = email\n        this.phone = phone\n        this.bio = bio\n        this.admin = admin\n    }\n}\n\nclass Question {\n    constructor(id, question, answer) {\n        this.id = id\n        this.question = question\n        this.answer = answer\n    }\n}\n\nclass QuestionSet {\n    constructor(id, name, length, difficulty, questions=[]) {\n        this.id = id\n        this.name = name\n        this.length = length\n        this.difficulty = difficulty\n        this.questions = questions\n    }\n    add(question) {\n        if (question instanceof Question) {\n            this.questions.push(question)\n        }\n    }\n    remove(id) {\n        this.questions = this.questions.filter(e => e.id !== id)\n    }\n}\n\nclass Module {\n    constructor(id, name, questionSetList=[], nextModules=[]) {\n        this.id = id\n        this.name = name\n        if (questionSetList instanceof Array) {\n            this.questionSetList = [...questionSetList].filter(e => e instanceof QuestionSet)\n        }\n        this.nextModules = nextModules\n    }\n    add(questionSet) {\n        if (questionSet instanceof QuestionSet) {\n            this.questionSetList.push(questionSet)\n        }\n    }\n    remove(id) {\n        this.questionSetList = this.questionSetList.filter(e => e.id !== id)\n    }\n    setNext(module) {\n        if (module instanceof Module) {\n            this.nextModules.push(module)\n        }\n    }\n}\n\nlet usersReady = false, questionSetsReady = false, commentsReady = false, renderReady = false\n\nfunction App() {\n\n    function getProfile() {\n        let user\n        fetch(root + \"/GetProfile\", {\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n            }\n        }).then(res => {\n            return res.json()\n        }).then(data => {\n            if (data.hasOwnProperty(\"teacher_id\")) {\n                user = new User(data.teacher_id, `${data.firstName} ${data.lastName}`, data.email, data.phone, data.bio, true)\n            } else {\n                user = new User(data.student_id, `${data.firstName} ${data.lastName}`, data.email, data.phone, data.bio, false)\n            }\n            setMainUser(user)\n        }).catch(err => {\n            alert(\"Please sign in first.\")\n            history.push('/signin')\n        })\n    }\n\n    function getUsers() {\n        let users = []\n        if (mainUser.admin) {\n            fetch(root + \"/GetRelationshipByTeacherEmail\", {\n                headers: {\n                    \"Authorization\": `Bearer ${token}`,\n                }\n            }).then(res => {\n                return res.json()\n            }).then(data => {\n                for (let i in data) {\n                    users.push(new User(0, data[i].student_email))\n                }\n                setUserDatabase(users)\n            })\n        } else {\n            fetch(root + \"/GetRelationshipByStudentEmail\", {\n                headers: {\n                    \"Authorization\": `Bearer ${token}`,\n                }\n            }).then(res => {\n                return res.json()\n            }).then(data => {\n                for (let i in data) {\n                    users.push(new User(0, data[i].teacher_email))\n                }\n                setUserDatabase(users)\n            })\n        }\n    }\n    \n    function getQuestionSets() {\n        fetch(root + \"/GetAllQuizs\")\n        .then(res => {\n            return res.json()\n        }).then(data => {\n            let questionSets = []\n            for (let i in data) {\n                let qs = data[i]\n                let qso = new QuestionSet(qs.id, `${qs.subject} (${qs.name})`, qs.length, qs.difficulty)\n                fetch(root + `/GetAllQuestionsByQuizID/${qs.id}`)\n                .then(res => res.json()).then(data => {\n                    for (let k in data) {\n                        let q = data[k]\n                        qso.add(new Question(q.id, q.label, q.answer))\n                    }\n                    qso.length = qso.questions.length\n                })\n                questionSets.push(qso)\n            }\n            setQuestionDatabase(questionSets)\n        })\n    }\n\n    function getModules() {\n        let modules = []\n        let module\n        fetch(root + \"/GetAllModules\")\n        .then(res => {\n            return res.json()\n        }).then(data => {\n            for (let i in data) {\n                let m = data[i]\n                module = new Module(m.id, `${m.subject}: ${m.difficulty}`, [], m.nextModules)\n                for (let j in m.quizs) {\n                    let qs = m.quizs[j]\n                    let qso = new QuestionSet(qs.id, `${qs.subject} (${qs.name})`, qs.length, qs.difficulty)\n                    fetch(root + `/GetAllQuestionsByQuizID/${qs.id}`)\n                    .then(res => res.json())\n                    .then(data => {\n                        for (let k in data) {\n                            let q = data[k]\n                            qso.add(new Question(q.id, q.label, q.answer))\n                        }\n                        qso.length = qso.questions.length\n                    })\n                    module.add(qso)\n                }\n                modules.push(module)\n            }\n            if (!mainUser.admin) {\n                fetch(root + `/GetProgressByStudentEmail/${mainUser.email}`)\n                .then(res => res.json())\n                .then(data => {\n                    let unlockedModules = [1]\n                    for (let l in data) {\n                        if (!(data[l].module_id in unlockedModules)) {\n                            unlockedModules.push(data[l].module_id)\n                        }\n                    }\n                    console.log(unlockedModules)\n                    modules = modules.filter(m => unlockedModules.some(u => u === m.id))\n                    linkModules(modules)\n                    setModuleDatabase(modules)\n                })\n            } else {\n                linkModules(modules)\n                setModuleDatabase(modules)\n            }\n        })\n    }\n\n    function linkModules(modules) {\n        if (modules.length !== 0) {\n            let module = modules[0]\n            let nextModuleIds = []\n            fetch(root + `/GetNextModuleByCurrentId/${module.id}`)\n            .then(res => res.json())\n            .then(data => {\n                for (let i in data) {\n                    let link = data[i]\n                    if (!(link.nextModule_Id in nextModuleIds)) {\n                        nextModuleIds.push(link.nextModule_Id)\n                    }\n                }\n                return nextModuleIds\n            }).then(nextModuleIds => {\n                for (let j in nextModuleIds) {\n                    module.setNext(modules.find(m => m.id === nextModuleIds[j]))\n                }\n                linkModules(modules.slice(1))\n            })\n        } else {\n            setModulesReady(true)\n        }\n    }\n\n    function getComments() {\n        fetch(root + \"/GetAllComments\")\n        .then(res => res.json())\n        .then(data => {\n            setComments(data)\n        })\n    }\n\n    const history = useHistory()\n\n    const token = window.localStorage.getItem('jwt')\n\n    const [mainUser, setMainUser] = useState(new User())\n    const [userDatabase, setUserDatabase] = useState(undefined)\n    const [questionDatabase, setQuestionDatabase] = useState(undefined)\n    const [moduleDatabase, setModuleDatabase] = useState([new Module()])\n    const [modulesReady, setModulesReady] = useState(false)\n\n    const [page, setPage] = useState(1)\n    const [showComments, setShowComments] = useState([])\n    const [comments, setComments] = useState(undefined)\n    const [ready, setReady] = useState(false)\n\n    useEffect(() => {\n        getProfile()\n    }, [])\n\n    useEffect(() => {\n        if (mainUser.name !== undefined) {\n            getUsers()\n            getQuestionSets()\n            getModules()\n            getComments()\n        }\n    }, [mainUser])\n\n    useEffect(() => {\n        if (userDatabase !== undefined) {\n            setShowComments(new Array(userDatabase.length).fill(false))\n        }\n    }, [userDatabase])\n\n    useEffect(() => {\n        if (userDatabase !== undefined) {\n            usersReady = true;\n        }\n        if (questionDatabase !== undefined) {\n            questionSetsReady = true;\n        }\n        if (comments !== undefined) {\n            commentsReady = true;\n        }\n        if (!ready) {\n            renderReady = usersReady && questionSetsReady && modulesReady && commentsReady\n            setReady(renderReady)\n        }\n    }, [userDatabase, questionDatabase, moduleDatabase, comments, modulesReady])\n\n    function changePage(pageId) {\n        setPage(pageId)\n    }\n\n    function DynamicProfile() {\n        let { name } = useParams()\n        return (<Profile pendingUser={name} admin={mainUser.admin} />)\n    }\n\n    function DynamicQuestionDatabase() {\n        let { id } = useParams()\n        return (<QuestionSetComponent questionSet = {questionDatabase.find(e => e.id === parseInt(id))} />)\n    }\n    \n    function DynamicModule() {\n        let { id } = useParams()\n        return <KnowledgePoint module={moduleDatabase.find(m => m.id === parseInt(id)).questionSetList} admin={mainUser.admin} />\n    }\n    \n    function DynamicQuiz() {\n        let { id } = useParams()\n        return <Quiz questionSet={questionDatabase.find(qs => qs.id === parseInt(id))} email={mainUser.email} qsetId={id} />\n    }\n\n    function DynamicComments() {\n        let { name } = useParams()\n        return <Comments name={name} commentList={comments.filter(c => (c.studuent_Receiver === name || c.teacher_Sender === name))} /> // Intentional Misspelling\n    }\n\n    function toggleComment(id) {\n        setShowComments([...showComments.slice(0, id), !showComments[id], ...showComments.slice(id+1)])\n    }\n\n    function addComment(comment, user) {\n        fetch(root + \"/Communication\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                \"Teacher_Sender\":`${mainUser.email}`,\n                \"Student_Receiver\":`${user.name}`,\n                \"Text\":`${comment}`\n            })\n        }).then(alert(\"Comment sent!\"))\n    }  \n\n    return (\n        <Router>\n            {(ready) && \n            <>\n                <Header />\n                <Route path='/app' render={(props) => (\n                    <>\n                        <Panel admin={mainUser.admin} onClick={changePage} />\n                        {(page === 0) && <Profile pendingUser = {mainUser} admin={mainUser.admin} />}\n                        {(page === 1 && mainUser.admin) && <UserDatabaseComponent\n                            database={userDatabase}\n                            toggleComment={toggleComment}\n                            showComments={showComments}\n                            addComment={addComment}\n                        />}\n                        {(page === 2 && mainUser.admin) && <QuestionDatabaseComponent modules={moduleDatabase} questionSets={questionDatabase} />}\n                        {(page === 1 && !mainUser.admin) && <LearningTree modules={moduleDatabase} />}\n                        {(page === 2 && !mainUser.admin) && <UserDatabaseComponent\n                            database={userDatabase}\n                            toggleComment={toggleComment}\n                            showComments={showComments}\n                            addComment={addComment}\n                        />}\n                    </>\n                )} />\n                <Switch>\n                    <Route path='/user/:name' children={<DynamicProfile />} />\n                    <Route path='/qset/:id' children={<DynamicQuestionDatabase />} />\n                    <Route path=\"/kp/:id\" children={<DynamicModule />} />\n                    <Route path=\"/quiz/:id\" children={<DynamicQuiz />} />\n                    <Route path=\"/comments/:name\" children={<DynamicComments />} />\n                </Switch>\n                <Footer />\n            </>\n            }\n        </Router>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}